local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\75\143","\93\101\161\34"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v123=v13(v102,v30);v30=nil;return v123;else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;end end else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or (0 -0) ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + (5 -3) );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + (5 -2) );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * (43216383 -26439167)) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,650 -(555 + 64) );local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==(931 -(857 + 74))) then if (v59==0) then return v61 * 0 ;else local v112=0;while true do if (v112==0) then v60=569 -(367 + 201) ;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/(927 -(214 + 713))))) or (v61 * NaN) ;end return v16(v61,v60-(257 + 766) ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==3) then return v14(v65);end if (1==v63) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=1;end if (2==v63) then v65={};for v113=1 + 0 , #v64 do v65[v113]=v10(v9(v11(v64,v113,v113)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end if (0==v80) then v81=v32();v82=nil;v80=1;end end end v69[3]=v32();for v83=1 + 0 ,v34() do local v84=v32();if (v31(v84,1,1)==0) then local v108=0;local v109;local v110;local v111;while true do if (v108==3) then if (v31(v110,960 -(892 + 65) ,7 -4 )==1) then v111[4]=v71[v111[4]];end v66[v83]=v111;break;end if (1==v108) then v111={v33(),v33(),nil,nil};if (v109==0) then local v126=0;while true do if (v126==0) then v111[3]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[3]=v34();elseif (v109==(1067 -(68 + 997))) then v111[1273 -(226 + 1044) ]=v34() -(2^16) ;elseif (v109==3) then local v135=0;while true do if (0==v135) then v111[3]=v34() -((8 -6)^(133 -(32 + 85))) ;v111[4]=v33();break;end end end v108=2;end if (v108==0) then v109=v31(v84,2,3);v110=v31(v84,4,7 -1 );v108=1;end if (v108==2) then if (v31(v110,1 + 0 ,1)==1) then v111[2]=v71[v111[1 + 1 ]];end if (v31(v110,2,2)==1) then v111[3]=v71[v111[3]];end v108=3;end end end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1 -0 ];local v77=v73[3 -1 ];local v78=v73[353 -(87 + 263) ];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v106=0,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + (181 -(67 + 113)) ];else v97[v106]=v94[v106 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v107=0;while true do if (1==v107) then if (v100<=55) then if (v100<=27) then if (v100<=13) then if (v100<=6) then if (v100<=2) then if (v100<=0) then local v138=v99[2];local v139=v99[4];local v140=v138 + 2 ;local v141={v97[v138](v97[v138 + 1 ],v97[v140])};for v162=1,v139 do v97[v140 + v162 ]=v141[v162];end local v142=v141[1];if v142 then local v165=0;while true do if (v165==0) then v97[v140]=v142;v91=v99[3];break;end end else v91=v91 + 1 ;end elseif (v100==1) then v97[v99[2]]=v99[3 + 0 ] * v97[v99[4]] ;else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=4) then if (v100>3) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>5) then local v168=v99[2];local v169={v97[v168](v21(v97,v168 + 1 ,v92))};local v170=0;for v332=v168,v99[4] do v170=v170 + 1 ;v97[v332]=v169[v170];end else v97[v99[2]]=v97[v99[3]] * v97[v99[4]] ;end elseif (v100<=9) then if (v100<=(16 -9)) then if (v97[v99[2 + 0 ]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==8) then v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=11) then if (v100==10) then v97[v99[7 -5 ]][v99[3]]=v97[v99[4]];else local v177=0;local v178;local v179;local v180;while true do if (v177==1) then v180=v97[v178] + v179 ;v97[v178]=v180;v177=2;end if (v177==0) then v178=v99[2];v179=v97[v178 + 2 ];v177=1;end if (v177==2) then if (v179>0) then if (v180<=v97[v178 + (953 -(802 + 150)) ]) then v91=v99[3];v97[v178 + 3 ]=v180;end elseif (v180>=v97[v178 + 1 ]) then v91=v99[3];v97[v178 + 3 ]=v180;end break;end end end elseif (v100>12) then if (v99[2]<v97[v99[10 -6 ]]) then v91=v91 + 1 ;else v91=v99[3];end else local v181=0;local v182;local v183;local v184;local v185;while true do if (0==v181) then v182=v99[2];v183,v184=v90(v97[v182](v21(v97,v182 + 1 ,v92)));v181=1;end if (v181==1) then v92=(v184 + v182) -1 ;v185=0;v181=2;end if (v181==2) then for v426=v182,v92 do v185=v185 + 1 ;v97[v426]=v183[v185];end break;end end end elseif (v100<=20) then if (v100<=16) then if (v100<=14) then v97[v99[2]]=v99[3]~=0 ;elseif (v100>(27 -12)) then local v186=0;local v187;while true do if (0==v186) then v187=v99[2];v97[v187](v97[v187 + 1 ]);break;end end else v97[v99[2]]={};end elseif (v100<=18) then if (v100>17) then local v189=v99[2];local v190={v97[v189](v21(v97,v189 + 1 ,v92))};local v191=0;for v335=v189,v99[4] do v191=v191 + 1 ;v97[v335]=v190[v191];end elseif (v97[v99[2]]<v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>19) then local v192=0;local v193;while true do if (v192==0) then v193=v99[2];do return v97[v193](v21(v97,v193 + 1 ,v99[3]));end break;end end else do return;end end elseif (v100<=23) then if (v100<=21) then v97[v99[2]][v99[3]]=v99[4];elseif (v100==22) then local v194=v99[2];v97[v194]=v97[v194](v21(v97,v194 + 1 + 0 ,v99[1000 -(915 + 82) ]));else for v338=v99[2],v99[3] do v97[v338]=nil;end end elseif (v100<=25) then if (v100>24) then v97[v99[2]]=v97[v99[8 -5 ]];else do return v97[v99[2]];end end elseif (v100>26) then local v198=0;local v199;while true do if (v198==0) then v199=v99[2];do return v21(v97,v199,v92);end break;end end elseif (v97[v99[2]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=41) then if (v100<=34) then if (v100<=30) then if (v100<=28) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100==29) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);else v97[v99[2]]=v97[v99[3]] * v99[4] ;end elseif (v100<=32) then if (v100>(19 + 12)) then local v202=0;local v203;while true do if (v202==0) then v203=v99[2];v97[v203](v21(v97,v203 + (1 -0) ,v92));break;end end else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100>(1220 -(1069 + 118))) then local v206=0;local v207;while true do if (v206==0) then v207=v99[2];v97[v207]=v97[v207](v97[v207 + 1 ]);break;end end else local v208=0;local v209;local v210;local v211;while true do if (v208==1) then v211=v97[v209 + 2 ];if (v211>0) then if (v210>v97[v209 + 1 ]) then v91=v99[6 -3 ];else v97[v209 + 3 ]=v210;end elseif (v210<v97[v209 + 1 ]) then v91=v99[1 + 2 ];else v97[v209 + 3 ]=v210;end break;end if (v208==0) then v209=v99[4 -2 ];v210=v97[v209];v208=1;end end end elseif (v100<=37) then if (v100<=35) then local v148=0;local v149;while true do if (v148==0) then v149=v99[2];v97[v149]=v97[v149](v21(v97,v149 + 1 ,v92));break;end end elseif (v100>36) then if (v97[v99[2]]<v97[v99[6 -2 ]]) then v91=v91 + 1 ;else v91=v99[3];end else local v212=v99[2];local v213,v214=v90(v97[v212](v97[v212 + 1 ]));v92=(v214 + v212) -1 ;local v215=0;for v342=v212,v92 do v215=v215 + 1 ;v97[v342]=v213[v215];end end elseif (v100<=(39 + 0)) then if (v100>38) then if (v99[2]<v97[v99[795 -(368 + 423) ]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100>(125 -85)) then local v217=v99[2];local v218=v97[v217 + 2 ];local v219=v97[v217] + v218 ;v97[v217]=v219;if (v218>0) then if (v219<=v97[v217 + 1 ]) then local v429=0;while true do if (0==v429) then v91=v99[3];v97[v217 + 3 ]=v219;break;end end end elseif (v219>=v97[v217 + 1 ]) then v91=v99[3];v97[v217 + 3 ]=v219;end else local v221=0;local v222;while true do if (v221==0) then v222=v97[v99[4]];if  not v222 then v91=v91 + 1 ;else local v460=0;while true do if (0==v460) then v97[v99[2]]=v222;v91=v99[3];break;end end end break;end end end elseif (v100<=(66 -(10 + 8))) then if (v100<=(169 -125)) then if (v100<=(484 -(416 + 26))) then v91=v99[3];elseif (v100>43) then local v223=v99[2];v97[v223]=v97[v223]();else v97[v99[2]]=v99[9 -6 ];end elseif (v100<=46) then if (v100>45) then local v227=v99[1 + 1 ];local v228=v97[v227];for v345=v227 + 1 ,v92 do v15(v228,v97[v345]);end else local v229=v99[2];local v230=v99[4];local v231=v229 + 2 ;local v232={v97[v229](v97[v229 + 1 ],v97[v231])};for v346=1,v230 do v97[v231 + v346 ]=v232[v346];end local v233=v232[1];if v233 then local v375=0;while true do if (v375==0) then v97[v231]=v233;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100==47) then local v234=v88[v99[3]];local v235;local v236={};v235=v18({},{[v7("\191\17\225\3\210\133\54","\182\224\78\136\109")]=function(v349,v350) local v351=0;local v352;while true do if (0==v351) then v352=v236[v350];return v352[1][v352[2]];end end end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v353,v354,v355) local v356=0;local v357;while true do if (v356==0) then v357=v236[v354];v357[1][v357[2]]=v355;break;end end end});for v358=1 -0 ,v99[4] do v91=v91 + (439 -(145 + 293)) ;local v359=v87[v91];if (v359[1]==25) then v236[v358-1 ]={v97,v359[3]};else v236[v358-(431 -(44 + 386)) ]={v74,v359[3]};end v96[ #v96 + 1 ]=v236;end v97[v99[2]]=v40(v234,v235,v75);else v97[v99[2]]=v97[v99[1489 -(998 + 488) ]]%v97[v99[4]] ;end elseif (v100<=51) then if (v100<=49) then do return v97[v99[2]];end elseif (v100>50) then do return v97[v99[2]]();end else local v239=0;local v240;while true do if (v239==0) then v240=v99[2];v97[v240]=v97[v240](v21(v97,v240 + 1 ,v99[3]));break;end end end elseif (v100<=53) then if (v100>(17 + 35)) then v97[v99[2 + 0 ]]=v99[3] + v97[v99[4]] ;elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>54) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else local v242=0;local v243;local v244;while true do if (v242==0) then v243=v99[2];v244={};v242=1;end if (v242==1) then for v435=1, #v96 do local v436=0;local v437;while true do if (v436==0) then v437=v96[v435];for v493=0, #v437 do local v494=0;local v495;local v496;local v497;while true do if (0==v494) then v495=v437[v493];v496=v495[1];v494=1;end if (v494==1) then v497=v495[2];if ((v496==v97) and (v497>=v243)) then local v504=0;while true do if (0==v504) then v244[v497]=v496[v497];v495[773 -(201 + 571) ]=v244;break;end end end break;end end end break;end end end break;end end end elseif (v100<=(1221 -(116 + 1022))) then if (v100<=69) then if (v100<=62) then if (v100<=58) then if (v100<=56) then local v151=0;local v152;while true do if (v151==0) then v152=v99[2];do return v21(v97,v152,v92);end break;end end elseif (v100==57) then v97[v99[2]]=v97[v99[3]] + v97[v99[16 -12 ]] ;else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=60) then if (v100==59) then v97[v99[2]]=v97[v99[3]] * v97[v99[3 + 1 ]] ;elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>61) then local v248=0;local v249;local v250;local v251;local v252;while true do if (v248==1) then v92=(v251 + v249) -1 ;v252=0;v248=2;end if (v248==2) then for v438=v249,v92 do local v439=0;while true do if (0==v439) then v252=v252 + 1 ;v97[v438]=v250[v252];break;end end end break;end if (v248==0) then v249=v99[2];v250,v251=v90(v97[v249](v21(v97,v249 + 1 ,v99[3])));v248=1;end end else do return;end end elseif (v100<=(237 -172)) then if (v100<=63) then local v153=v99[2];v97[v153]=v97[v153](v21(v97,v153 + 1 ,v92));elseif (v100==64) then v97[v99[2]]();elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=67) then if (v100==66) then local v253=0;local v254;local v255;while true do if (v253==0) then v254=v99[7 -5 ];v255=v97[v254];v253=1;end if (v253==1) then for v440=v254 + 1 ,v92 do v15(v255,v97[v440]);end break;end end else local v256=0;local v257;while true do if (v256==0) then v257=v99[2];v97[v257](v21(v97,v257 + 1 ,v99[862 -(814 + 45) ]));break;end end end elseif (v100==68) then local v258=0;local v259;while true do if (v258==0) then v259=v99[2];v97[v259](v21(v97,v259 + 1 ,v92));break;end end else local v260=0;local v261;local v262;local v263;local v264;while true do if (v260==2) then for v441=v261,v92 do v264=v264 + 1 ;v97[v441]=v262[v264];end break;end if (v260==1) then v92=(v263 + v261) -1 ;v264=0 + 0 ;v260=2;end if (v260==0) then v261=v99[4 -2 ];v262,v263=v90(v97[v261](v21(v97,v261 + 1 ,v99[3])));v260=1;end end end elseif (v100<=76) then if (v100<=72) then if (v100<=70) then local v155=v97[v99[4]];if  not v155 then v91=v91 + 1 ;else v97[v99[2]]=v155;v91=v99[2 + 1 ];end elseif (v100>71) then v97[v99[2]][v99[888 -(261 + 624) ]]=v97[v99[6 -2 ]];else v97[v99[2]]=v74[v99[3]];end elseif (v100<=74) then if (v100>73) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[1083 -(1020 + 60) ];end else v97[v99[2]]= #v97[v99[3]];end elseif (v100==75) then local v272=v99[2];local v273=v97[v99[3]];v97[v272 + (1424 -(630 + 793)) ]=v273;v97[v272]=v273[v99[4]];else v97[v99[6 -4 ]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100<=(374 -295)) then if (v100<=77) then v97[v99[1 + 1 ]]=v97[v99[3]] + v99[13 -9 ] ;elseif (v100==78) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[1749 -(760 + 987) ]]=v99[3] + v97[v99[4]] ;end elseif (v100<=81) then if (v100==80) then v97[v99[2]]();else local v279=v99[2];local v280={};for v362=1, #v96 do local v363=v96[v362];for v382=0, #v363 do local v383=0;local v384;local v385;local v386;while true do if (v383==1) then v386=v384[2];if ((v385==v97) and (v386>=v279)) then local v481=0;while true do if (v481==0) then v280[v386]=v385[v386];v384[1]=v280;break;end end end break;end if (v383==0) then v384=v363[v382];v385=v384[1];v383=1;end end end end end elseif (v100==82) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v281=0;local v282;local v283;local v284;while true do if (0==v281) then v282=v88[v99[3]];v283=nil;v281=1;end if (v281==2) then for v444=1,v99[4] do v91=v91 + 1 ;local v445=v87[v91];if (v445[1]==25) then v284[v444-(1914 -(1789 + 124)) ]={v97,v445[769 -(745 + 21) ]};else v284[v444-1 ]={v74,v445[7 -4 ]};end v96[ #v96 + 1 ]=v284;end v97[v99[7 -5 ]]=v40(v282,v283,v75);break;end if (1==v281) then v284={};v283=v18({},{[v7("\1\0\240\255\58\58\225","\145\94\95\153")]=function(v447,v448) local v449=0;local v450;while true do if (v449==0) then v450=v284[v448];return v450[1][v450[2]];end end end,[v7("\194\242\26\208\89\190\243\201\17\205","\215\157\173\116\181\46")]=function(v451,v452,v453) local v454=v284[v452];v454[1][v454[2]]=v453;end});v281=2;end end end elseif (v100<=97) then if (v100<=90) then if (v100<=86) then if (v100<=84) then v97[v99[2]]={};elseif (v100==85) then v97[v99[2]]=v99[3] * v97[v99[4]] ;else v75[v99[3]]=v97[v99[2]];end elseif (v100<=88) then if (v100>87) then do return v97[v99[2]]();end else local v288=0;local v289;local v290;local v291;local v292;while true do if (v288==0) then v289=v99[2];v290,v291=v90(v97[v289](v97[v289 + 1 ]));v288=1;end if (v288==1) then v92=(v291 + v289) -(1 + 0) ;v292=0;v288=2;end if (2==v288) then for v456=v289,v92 do local v457=0;while true do if (v457==0) then v292=v292 + 1 ;v97[v456]=v290[v292];break;end end end break;end end end elseif (v100==89) then local v293=v99[2];do return v21(v97,v293,v293 + v99[3] );end else v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100<=93) then if (v100<=91) then v97[v99[2]]=v99[3];elseif (v100==92) then v97[v99[2]]=v74[v99[3]];elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=95) then if (v100==94) then v91=v99[3];else v97[v99[2]][v99[3]]=v99[4];end elseif (v100==96) then for v364=v99[2],v99[3] do v97[v364]=nil;end else local v300=0;local v301;while true do if (v300==0) then v301=v99[2];do return v97[v301](v21(v97,v301 + 1 ,v99[3]));end break;end end end elseif (v100<=(82 + 22)) then if (v100<=100) then if (v100<=98) then local v160=0;local v161;while true do if (v160==0) then v161=v99[2];v97[v161]=v97[v161]();break;end end elseif (v100>99) then v97[v99[2]]=v97[v99[3]];else local v304=0;local v305;while true do if (v304==0) then v305=v99[2];v97[v305]=v97[v305](v97[v305 + (1056 -(87 + 968)) ]);break;end end end elseif (v100<=102) then if (v100==101) then local v306=v99[8 -6 ];v97[v306](v21(v97,v306 + 1 ,v99[3 + 0 ]));else local v307=0;local v308;local v309;local v310;while true do if (0==v307) then v308=v99[2];v309=v97[v308];v307=1;end if (v307==1) then v310=v97[v308 + 2 ];if (v310>0) then if (v309>v97[v308 + 1 ]) then v91=v99[3];else v97[v308 + 3 ]=v309;end elseif (v309<v97[v308 + 1 ]) then v91=v99[6 -3 ];else v97[v308 + 3 ]=v309;end break;end end end elseif (v100==103) then local v311=v99[1415 -(447 + 966) ];v97[v311](v97[v311 + (2 -1) ]);else v97[v99[1819 -(1703 + 114) ]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=108) then if (v100<=106) then if (v100>105) then v97[v99[2]]=v75[v99[3]];else v97[v99[2]]=v75[v99[3]];end elseif (v100>107) then local v317=0;local v318;local v319;local v320;local v321;while true do if (v317==0) then v318=v99[2];v319,v320=v90(v97[v318](v21(v97,v318 + 1 ,v92)));v317=1;end if (v317==1) then v92=(v320 + v318) -(702 -(376 + 325)) ;v321=0;v317=2;end if (v317==2) then for v458=v318,v92 do local v459=0;while true do if (v459==0) then v321=v321 + (1 -0) ;v97[v458]=v319[v321];break;end end end break;end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=(338 -228)) then if (v100>109) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);else local v324=v99[2];local v325=v97[v99[3]];v97[v324 + 1 ]=v325;v97[v324]=v325[v99[4]];end elseif (v100==111) then v97[v99[2]]=v97[v99[3]] * v99[4] ;else v75[v99[3]]=v97[v99[2]];end v91=v91 + 1 ;break;end if (0==v107) then v99=v87[v91];v100=v99[1];v107=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
